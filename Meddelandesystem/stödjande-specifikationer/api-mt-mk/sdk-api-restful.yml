openapi: "3.0.3"
info:
  
  title: SDK API for document type urn:riv:infrastructure:messaging:MessageWithAttachments:3
  version: "1.0.0"
  description: API for message exchange between API clients (Meddelandeklient) and API producers (Meddelandetj√§nst). Using 3.0.3 for best tooling support. For mor information see B1.4.2 - SDK_Rekommendation API MT-MK. 
  contact:
    name: Digg - Kontakt
    url: https://sdk.digg.se
    email: sdk@digg.se
  license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: '{protocol}://{servers}/v1'
    variables:
      servers:
        default: open-test.digg.se  # OPEN-TEST server
        enum:
          - open-test.digg.se  # OPEN-TEST server
          - sdk-qa.digg.se   # SDK QA
      protocol:
        enum:
          - https
        default: https
tags:
  - name: Send message
    description: Send messages
    externalDocs:
      url: https://sdk.digg.se
  - name: Message life cycle
    description: Message handling during message exchange
    externalDocs:
      url: https://sdk.digg.se

paths:
  /sdk/messages:
    post:
      summary: Send a new message
      operationId: sendMessage
      tags:
        - Send message
      requestBody:
        description: Send a new message
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createMessage"

      responses:
        "201":
          description: "OK. Message received and validated. The message will be processed."

        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
              example:
                type: urn:problem-type:sdk:badRequest
                title: Bad Request
                status: 400
                detail: "MESSAGE_EXCHANGE_ERROR"
                instance: 7a366a80-9931-4f37-b224-de4069e1c8bf
                eventIssues:
                  - typeCode: MESSAGE_EXCHANGE_ERROR #mandatory
                    title: "Input isn't valid with respect to schema"
                    detail: Wrong date format # recommended, if more detail can be provided
                    in: "xyz"

        "401":
          description: Unauthorized
      security:
        - message_auth:
          - urn:sdk.api:sendMessage
    get:
      operationId: getMessageByFilter
      description: Get a specific message by filter option (messageStatus, creationDateTime, recipientAttention.subOrganization.extension, senderAttention.subOrganization.extension). This operation always excludes digitalDocument
      tags:
        - Message life cycle
      parameters:
        - in: query
          name: filter
          required: false
          description: "The filter query parameter family is reserved to be used as the basis for any filtering of strategy. ?Filter[attribute]=value"
          example: '?filter[recipientAttention.subOrganization.extension]=sdk:inkorg001:0203:inera.se'
          schema:
            items:
              type: string          
          style: form
          explode: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/outputArrayData"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
              example:
                type: urn:problem-type:sdk:badRequest
                title: Bad Request
                status: 400
                detail: "MESSAGE_EXCHANGE_ERROR"
                instance: 7a366a80-9931-4f37-b224-de4069e1c8bf
                eventIssues:
                  - typeCode: MESSAGE_EXCHANGE_ERROR #mandatory
                    title: "Input isn't valid with respect to schema"
                    detail: Wrong date format # recommended, if more detail can be provided
                    in: "xyz"
        
        "401":
          description: Unauthorized

        "404":
          description: Not found.
      security:
        - message_auth:
          - urn:sdk.api:getMessageByFilter
      

  /sdk/messages/{messageId}:
    parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            description: Search for a specific messageId
            example: "19c7e876-ef6f-4fb0-bccb-e93e3ab6e69f"

    get:
      operationId: getMessageById
      description: Get a message by messageId. Filter options (status, handlingServiceId, creationDateTime, pagenumber, size, contentBodyText, contentFiles).
      tags:
        - Message life cycle

      parameters:
        - in: query
          name: filter
          required: false
          schema:
            items:
              type: string
              example: '?filter[senderAttention.subOrganization.extension]=sdk:utkorg:0203:inera.se'
          style: form
          explode: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/outputData"   
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
              example:
                type: urn:problem-type:sdk:badRequest
                title: Bad Request
                status: 400
                detail: "MESSAGE_EXCHANGE_ERROR"
                instance: 7a366a80-9931-4f37-b224-de4069e1c8bf
                eventIssues:
                  - typeCode: MESSAGE_EXCHANGE_ERROR #mandatory
                    title: "Input isn't valid with respect to schema"
                    detail: Wrong date format # recommended, if more detail can be provided
                    in: "xyz"
        
        "401":
          description: Unauthorized
          
        "404":
          description: Not Found
        
      security:
        - message_auth:
          - urn:sdk.api:getMessage

    delete:
      operationId: deleteMessageById
      summary: Delete a message. A client can only delete messages on specific messages status
      tags:
        - Message life cycle
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            items:
              type: string
              example: f92d0823-e219-4985-bace-07a4102f2988
          style: simple

      responses:
        "202":
          description: Accepted

        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
              example:
                type: urn:problem-type:sdk:badRequest
                title: Bad Request
                status: 400
                detail: "MESSAGE_EXCHANGE_ERROR"
                instance: 7a366a80-9931-4f37-b224-de4069e1c8bf
                eventIssues:
                  - typeCode: MESSAGE_EXCHANGE_ERROR #mandatory
                    title: "Input isn't valid with respect to schema"
                    detail: Wrong date format # recommended, if more detail can be provided
                    in: "xyz"

        "401":
          description: Unauthorized

        "404":
          description: Message not found.

      security:
        - message_auth:
          - urn:sdk.api:deleteMessage
 
components:
  schemas:
    createMessage:
      type: object
      description: "Message object containing metadata and payload/message"
      properties:
        data:
          $ref: "#/components/schemas/messageCreateDef"

    outputData:
      type: object
      description: Object used to return a single data (message) object.
      properties:
        meta:
          type: object
          properties:
            version:
              $ref: "#/components/schemas/versionDef"
        links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/linksDef"
          
        data:
          $ref: "#/components/schemas/messageDef"

    outputArrayData:
      type: object
      description: Object used to return a array of data (message) objects.
      properties:
        meta:
          type: object
          properties:
            version:
              $ref: "#/components/schemas/versionDef"
        links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/linksDef"
        data:
          type: array
          items:
            $ref: "#/components/schemas/messageDef"

    responseMessage:
      type: object
      description: result object. OK indicates that message is follows specification and is valid.
      properties:
        statusCode:
          type: string
          enum:
            - OK
          description: Status for API operation.
          example: "OK"

      required:
        - statusCode

    versionDef:
      type: string
      description: "API version"
      enum:
        - sdk api 1.0.0

    linksDef:
      type: string
      description: "A string whose value is a URI-reference [RFC3986 Section 4.1] pointing to the links target,"
      example: "https://otm-sdk.inera.se/sdk-api/v1/sdk/messages"
     
    messageDef:
      type: object
      description: "Metadata and message object"
      properties:
        type:
            type: string
            enum:
              - messages
        id:
          type: string
          description: "Internt MT id."
          example: 19c7e876-ef6f-4fb0-bccb-e93e3ab6e69f
        
        attributes:
          $ref: "#/components/schemas/messageAttributesDef"

          required:
            - type
            - id

    messageCreateDef:
      type: object
      description: "Metadata and message object used when a message is created"
      properties:
        type:
            type: string
            enum:
              - messages
        id:
          type: string
          description: "Internt MT id (UUID)."
          example: 19c7e876-ef6f-4fb0-bccb-e93e3ab6e69f
        
        attributes:
          $ref: "#/components/schemas/messageCreateAttributesDef"

          required:
            - type

    messageStatusDef:
      type: string
      description: Obligatoriska 'NEW', 'WAITING_FOR_RECEIPT', 'MESSAGE_EXCHANGE_ERROR', 'ACCEPTED'
      enum:
        - SCHEDULED
        - SUBMITTED
        - SCHEDULED_FOR_RESEND
        - ACKNOWLEDGE
        - WAITING_FOR_RECEIPT
        - MESSAGE_EXCHANGE_ERROR
        - ACCEPTED
        - REJECTED
        - RETRIEVED
        - RECEIPT_SENT
        - NEW
        - ERROR
    
    messageAttributesDef:
      type: object
      description: "SDK Meddelande"
      properties:
        messageStatus:
          $ref: "#/components/schemas/messageStatusDef"

        creationDateTime:
          $ref: "#/components/schemas/creationDateTimeDef"

        messageId:
          $ref: "#/components/schemas/messageIdDef"

        conversationId:
          $ref: "#/components/schemas/conversationIdDef"

        refToMessageId:
          $ref: "#/components/schemas/refToMessageIdDef"

        confidentiality:
          $ref: "#/components/schemas/confidentialityDef"
        
        generatingSystem:
          $ref: "#/components/schemas/generatingSystemDef"

        recipientAttention:
          $ref: "#/components/schemas/recipientAttentionDef"

        senderAttention:
          $ref: "#/components/schemas/senderAttentionDef"

        sender:
          $ref: "#/components/schemas/senderDef"
        
        recipient:
          $ref: "#/components/schemas/recipientDef"

        label:
          $ref: "#/components/schemas/labelDef"

        digitalDocument:
          type: array
          items:
            $ref: "#/components/schemas/DigitalDocumentDef"

        events:  
          $ref: "#/components/schemas/Events"

      required:
      - messageStatus
      - creationDateTime
      - messageId
      - conversationId
      - confidentiality
      - label
      - sender
      - recipient

    messageCreateAttributesDef:
      type: object
      description: "SDK Meddelande. When created id, messageId and conversationId is optional(Created by API producer - MT). "
      properties:
        messageStatus:
          $ref: "#/components/schemas/messageStatusDef"

        creationDateTime:
          $ref: "#/components/schemas/creationDateTimeDef"

        messageId:
          $ref: "#/components/schemas/messageIdDef"

        conversationId:
          $ref: "#/components/schemas/conversationIdDef"

        refToMessageId:
          $ref: "#/components/schemas/refToMessageIdDef"

        confidentiality:
          $ref: "#/components/schemas/confidentialityDef"
        
        generatingSystem:
          $ref: "#/components/schemas/generatingSystemDef"

        recipientAttention:
          $ref: "#/components/schemas/recipientAttentionDef"

        senderAttention:
          $ref: "#/components/schemas/senderAttentionDef"

        sender:
          $ref: "#/components/schemas/senderDef"
        
        recipient:
          $ref: "#/components/schemas/recipientDef"

        label:
          $ref: "#/components/schemas/labelDef"

        digitalDocument:
          type: array
          items:
            $ref: "#/components/schemas/DigitalDocumentDef"

        events:  
          $ref: "#/components/schemas/Events"

      required:
      - confidentiality
      - label
      - sender
      - recipient  
    
    creationDateTimeDef:
      type: string
      description: "Tidsst√§mpel f√∂r n√§r meddelandet skapades. Tidszon UTC skall anv√§ndas"
      example: "2019-08-15T17:52:58.1Z"
      
    handlingServiceIdDef:
      deprecated: true
      description: "Motsvarar /attention/subOrganization/organizationId. Id f√∂r att identifiera funktion/enheter. H√§mtas fr√•n SDK adressbok identifier. '/attention/subOrganization/organizationId"
      example: "sdk:inkorg:0203:inera.se"
    
    messageIdDef:
      description: Unik identifierare (UUID) av meddelande.
      type: string
      example: ff325210-0690-42fe-b86f-95ecab821223
    
    conversationIdDef:
      description: Skapas av s√§ndande system. Unik identifierare (UUID).
      type: string
      example: a8480ada-6a1f-44a3-a960-9acaf4efcdcd
    
    refToMessageIdDef:
      description:
        Anv√§nds inte f√∂r meddelanden som inte √§r svar p√• annat meddelande.
        RefToMessageId s√§tts av s√§ndande system n√§r ett meddelande besvaras.
        RefToMessageId ska s√§ttas till messageId f√∂r meddelandet som besvaras
      type: string
      example: ff325210-0690-42fe-b86f-95ecab821223
    
    confidentialityDef:
      description:
        Kommunicerar s√§ndande organisations sekretessbed√∂mning. Syftet med
        markeringen √§r att upplysa mottagande organisation om att meddelandet
        inneh√•ller sekretessbelagd information och/eller k√§nsliga personuppgifter
      type: boolean
    
    generatingSystemDef:
      description:
        Identifierare f√∂r systemet som skapade/genererade meddelandet. Id
        kan anv√§ndas f√∂r fels√∂kning/support.
      type: object
      properties:
        root:
          type: string
        extension:
          type: string
        label:
            type: string
    
    recipientAttentionDef:
      type: object
      properties:
        subOrganization:
         properties:
          root:
            type: string
            example: urn:riv:infrastructure:messaging:functionalAddress
          extension:
            type: string
            description: "Motvarar metadata 'handlingServiceId'"
            example: sdk:inkorg:0203:digg.se
            maxLength: 256
          label:
            type: string
            example: Inkorgen hos Digg
          
        attentionPerson:
          type: array
          items:
            $ref: "#/components/schemas/personDef" 

        referenceId:
          type: array
          items:
            $ref: "#/components/schemas/referenceDef"
      
      required:
        - subOrganization
      
    senderAttentionDef:
      type: object
      properties:
        subOrganization:
         properties:
          root:
            type: string
            example: urn:riv:infrastructure:messaging:functionalAddress
          extension:
            type: string
            example: sdk:utkorg:0203:inera.se
            maxLength: 256
          label:
            type: string
            example: Utkorgen hos Inera
          
        attentionPerson:
          type: array
          items:
            $ref: "#/components/schemas/personDef" 

        referenceId:
          type: array
          items:
            $ref: "#/components/schemas/referenceDef"
      
      required:
        - subOrganization
        
    senderDef:
      type: string
      description: S√§ndande organisation (senderID.extension).
      example: 0203:inera.se
    
    recipientDef:
      type: string
      description: Mottagande organisation (recipientID.extension) .
      example: 0203:digg.se
    
    labelDef:
      description: Meddelandets rubrik
      type: string
      maxLength: 256
      example: "Meddelandets rubrik"

    personDef:
      type: object
      required:
        - root
        - extension
        - label
      properties:
        root:
          type: string
          example: 1.2.752.29.6.2.1
        extension:
          type: string
          maxLength: 256
          example: SE2321000016-nnnnn
        label:
          type: string
          description: The name of the person
          example: Anna Andersson
    
    referenceDef:
      type: object
      required:
        - root
        - extension
        - label
      properties:
        root:
          type: string
          example: 1.2.752.129.2.1.3.1
        extension:
          type: string
          maxLength: 256
          example: 19121212-1212
        label:
          type: string
          description: The name of the person
          example: "Tolvan Tolvansson"
    
    DigitalDocumentDef:
      type: object
      description: "Inneh√•ller en eller flera dokument (fritext eller bilaga)."
      required:
        - documentId
      
      properties:
        documentName:
          description: "Dokumentets namn. Om ett v√§rde skickas skall det hanteras i klient."
          type: string
          example: "Document or issue containing information"
        documentId:
          description: "Identifierare av dokument. Skapas av s√§ndaren."
          type: string
          example: "Identifier"
        index:
          description: "Sorteringsordning. Om flera documents(DigitalDocumentType) skickas skall sorteringsordning s√§ttas. Detta f√∂r att underl√§tta informationsutbyte d√• presentationsordning. Siffror skall anv√§ndas. 1 representerar den f√∂rsta."
          type: string
          example: "1"
        contentTextBody:
          type: array
          items:
            $ref: "#/components/schemas/contentTextBodyDef"
        contentFiles:
          type: array   
          items:
            $ref: "#/components/schemas/contentFileDef"

    contentTextBodyDef:
      type: string
      description: Message body (characterSequence)
      example: "characterSequence"
    
    contentFileDef:
      type: object
      required:
        - fileName
        - contentType
        - content
      properties:
        fileName:
          type: string
          description: Filename.
          example: "hal.jpeg"
        contentType:
          type: string
          description: Type of file (MIME-type)
          example: "image/jpeg"
        content:
          type: string
          description: File Base64 encoded
          example: "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"

    EventDef:
      description: API:et beskriva feldetaljer enligt schemat nedan (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: En URI som identifierar problemtypen som skall vara mer specialiserad √§n statuskoden.
          default: about:blank # kept for backwards-compatibility, type will be mandatory in problem-v2
        title:
          type: string
          description: En kort beskrivning av problemtypen. Dvs att beskrivningen alltid ska vara identisk f√∂r samma typ av fel. Om inte type √§r angivet skall title reflektera beskrivningen av statuskoden.
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: Detsamma som statuskoden f√∂r HTTP-svaret om det anv√§nds. Kan vara l√§mpligt att anv√§nda om svaret beh√∂ver vara sj√§lvf√∂rklarande.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: Kort beskrivning av det faktiska felet, avsedd f√∂r l√§sning av m√§nniska.
        instance:
          type: string
          format: uri
          description: En URI som identifierar den faktiska resursen.
      example:
        {
          "type": "urn:problem-type:sdk:message",
          "title": "Payload Too Large",
          "status": 400,
          "detail": "Request message must not be larger than 30 MB",
          "instance": "123e4567-e89b-12d3-a456-426614174000",
        }
    Events:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventDef"
      properties:
        eventIssues:
          type: array
          items:
            $ref: "#/components/schemas/Issue"
      example:
          type: urn:problem-type:sdk:messageExchangeError
          title: Bad Request
          detail: "MESSAGE_EXCHANGE_ERROR"
          instance: 7a366a80-9931-4f37-b224-de4069e1c8bf
          eventIssues:
            - typeCode: MESSAGE_EXCHANGE_ERROR #mandatory
              title: "No message receipt recived from.... Message NOT deliverd."
              detail: NA # recommended, if more detail can be provided
              in: "xyz"
            - typeCode: WAITING_FOR_RECEIPT #mandatory
              title: "Waiting for receipt from remote party"
              detail: NA # recommended, if more detail can be provided
              in: "xyz"
            - typeCode: SCHEDULED #mandatory
              title: "Message scheduled for sending to local Access Point"
              detail: NA # recommended, if more detail can be provided
              in: "xyz"
    Issue:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventDef"
        # status property of Problem is usually not used for input validation issues
      properties:
        in:
          type: string

  securitySchemes:
     message_auth:    
            type: oauth2
            description: This API implements SDK optional security ettings.
            flows:
                clientCredentials:
                    tokenUrl: 'https://otm-sdk.inera.se/auth/realms/sdk/protocol/openid-connect/token'
                    scopes:
                        urn:sdk.api:deleteMessage: delete a messages
                        urn:sdk.api:getMessage: get a message by id
                        urn:sdk.api:getMessageByFilter: get a message by filter
                        urn:sdk.api:sendMessages: send a message
